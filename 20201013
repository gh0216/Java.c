import com.sun.xml.internal.ws.api.model.wsdl.WSDLOutput;
import org.w3c.dom.html.HTMLParagraphElement;
import org.w3c.dom.ls.LSOutput;

import java.util.Random;
import java.util.Scanner;
import java.util.jar.JarOutputStream;

public class TestDeno {
    // 123的各个位
    public static void main22(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("输入一个数");
        int a = sc.nextInt();
        while (a != 0) {
            System.out.println(a % 10);
            a /= 10;
        }
    }

    //编写代码模拟三次密码输入的场景。 最多能输入三次密码，密码正确，提示“登录成功”,密码错误， 可以重新输 入，最多输入三次。三次均错，则提示退出程序
    public static void main21(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int count = 3;
        while (count != 0) {
            System.out.println("请输入密码：");
            String password = scanner.nextLine();
            //if(password == "123456") {
            if (password.equals("123456")) {
                System.out.println("登录成功！");
                break;
            } else {
                count--;
                System.out.println("登录失败！");
                System.out.println("你还有：" + count + "次机会！");
            }
        }

    }

    //获取一个数二进制序列中所有的偶数位和奇数位， 分别输出二进制序列
    public static void main20(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("输入一个数");
        int a = sc.nextInt();
        System.out.println("奇数位");
        for (int i = 30; i >= 0; i -= 2) {
            //i所对应的位置其实就是偶数的位
            System.out.print(((a >> i) & 1) + " ");
        }
        System.out.println();
        System.out.println("偶数位");
        for (int i = 31; i >= 1; i -= 2) {
            //i所对应的位置其实就是奇数的位
            System.out.print(((a >> i) & 1) + " ");
        }
    }

    //1
    public static void main19(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("输入一个数");
        int i = sc.nextInt();
        String a = "";
        int tmp = i;
        int num = 0;
        while (i != 0) {
            if (i % 2 == 1) {
                num += 1;
            }
            a = i % 2 + a;
            i = i / 2;
        }
        System.out.println(tmp + "的二进制数为" + a);
        System.out.println(tmp + "的二进制中1的个数为" + num);
    }

    //n与n-1  二进制中1的个数-1
    public static void main18(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int count = 0;
        int tmp = a;
        while (a != 0) {
            count++;
            a = a & (a - 1);
        }
        System.out.println(tmp + "二进制中1的个数为" + count);
    }

    //按位与
    public static void main17(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int count = 0;
        while (a != 0) {
            if ((a & 1) != 0) {
                count++;
            }
            a = a >>> 1;//无符号右移
        }
        System.out.println(count);
    }

    //按位与
    public static void main16(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int count = 0;
        for (int i = 0; i < 31; i++) {
            if ((n & 1) != 0) {
                count++;
            }
            n = n >> 1;//右移
        }
        System.out.println(count);
    }


    //求两个正整数的最大公约数
    public static void main15(String[] args) {
        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        int b = sc.nextInt();
        while (a % b != 0) {
            int c = a % b;
            a = b;
            b = c;
        }
        System.out.println("最大公约数是：" + b);
    }

    //计算1/1-1/2+1/3-1/4+1/5 …… + 1/99 - 1/100 的值 。
    public static void main14(String[] args) {
        double sum = 0;
        int flg = 1;
        for (int i = 1; i <= 100; i++) {
            sum += (1.0 / i) * flg;
            flg = -flg;
        }
        System.out.println(sum);
    }

    //自幂数
    public static void main13(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        for (int i = 1; i < n; i++) {
            int count = 0;
            int tmp = i;
            while (tmp != 0) {
                count++;
                tmp = tmp / 10;
            }
            tmp = i;
            int sum = 0;
            while (tmp != 0) {
                sum += Math.pow(tmp % 10, count);
                tmp /= 10;
            }
            if (sum == i) {
                System.out.println(i + "自幂数");
            }
        }
    }

    //求出0～999之间的所有“水仙花数”并输出。(“水仙花数”是指一个三位数，其各位数字的立方和确好等于该数本 身，如；153＝1＋5＋3?，则153是一个“水仙花数“。）
    public static void main12(String[] args) {
        int a = 0;
        int b = 0;
        int c = 0;
        int d = 0;
        int e = 0;
        for (a = 0; a < 10; a++) {
            for (b = 0; b < 10; b++) {
                for (c = 0; c < 10; c++) {
                    d = 100 * a + 10 * b + c;
                    e = a * a * a + b * b * b + c * c * c;
                    if (d == e)
                        System.out.println(d);
                }
            }
        }
    }

    //输入控制九九乘法口诀表
    public static void main11(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        for (int i = 0; i <= n; i++) {
            for (int j = 0; j <= i; j++) {
                System.out.print(i + "*" + j + "=" + i * j + " ");
            }
            System.out.println();
        }
    }

    //判断一个数是否为素数   （n/2）
    public static void main10(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        if (n <= 0) {
            System.out.println(n + "不是素数");
        }
        int i = 2;
        for (; i < n / 2; i++) {
            if (n % i == 0) {
                System.out.println(n + "不是素数");
                break;
            }
        }
        if (i >= n / 2) {
            System.out.println(n + "是素数！");
        }
    }

    //  n
    public static void main9(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        if (n <= 0) {
            System.out.println(n + "不是素数");
        }
        int i = 2;
        for (; i < n; i++) {
            if (n % i == 0) {
                System.out.println(n + "不是素数");
                break;
            }
        }
        if (i >= n) {
            System.out.println(n + "是素数！");
        }
    }

    // sqrt(n)
    public static void main8(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        if (n <= 0) {
            System.out.println(n + "不是素数");
        }
        int i = 2;
        for (; i < Math.sqrt(n); i++) {
            if (n % i == 0) {
                System.out.println(n + "不是素数");
                break;
            }
        }
        if (i >= Math.sqrt(n)) {
            System.out.println(n + "是素数！");
        }
    }

    //判断闰年
    public static void main7(String[] args) {
        int i = 1;
        for (i = 1000; i <= 2000; i++)
            if (i % 4 == 0 && i % 100 != 0 || i % 400 == 0) {
                System.out.println(i + "是闰年");
            }
    }

    //编写程序数一下 1到 100 的所有整数中出现多少个数字9
    public static void main6(String[] args) {
        int count = 0;
        for (int i = 1; i <= 100; i++) {
            if (i % 10 == 9) {
                count++;
            }
            if (i / 10 == 9) {
                count++;
            }
        }
        System.out.println(count);
    }

    //编写程序数一下 1到 100 的所有整数中出现多少个数字9
    public static void main5(String[] args) {
        int i = 0;//定义十位
        int j = 0;//定义个位
        int num = 0;//存1——100的变量
        int a = 0;//存9出现次数的变量
        for (i = 0; i < 10; i++) {
            for (j = 0; j < 10; j++) {
                num = 10 * i + j;
                if (i == 9 || j == 9)
                    a += 1;
            }
        }
        System.out.println(a);
    }

    //猜字游戏
    public static void main4(String[] args) {
        Random random = new Random();
        Scanner sc = new Scanner(System.in);
        int rand = random.nextInt(100) + 1;
        while (true) {
            System.out.println("输入你想猜的数");
            int n = sc.nextInt();
            if (n < rand) {
                System.out.println("猜小了!");
            } else if (n == rand) {
                System.out.println("猜对了！");
                break;
            } else {
                System.out.println("猜大了！");
            }
        }
    }

    //定义函数 ： 两个数比较大小
    public static int maxTwonumber(int a, int b) {
        int max2 = 0;
        max2 = Math.max(a, b);
        return max2;
    }

    //定义函数 ：三个数比较
    public static int maxThreenumber(int a, int b, int c) {
        int max2 = maxTwonumber(a, b);
        int max3 = maxTwonumber(max2, c);
        return max3;
    }

    ////定义函数 ：四个数比较
    public static int maxFournumber(int a, int b, int c, int d) {
        int max3 = maxThreenumber(a, b, c);
        int max4 = maxTwonumber(max3, d);
        return max4;
    }

    //三个数比较大小
    public static void main23(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("输入三个数：");
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        System.out.println(a + " " + b + " " + c);
        int ret = maxThreenumber(a, b, c);
        System.out.println(ret);
    }

    //四个数比较大小
    public static void main3(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("输入四个数：");
        int a = sc.nextInt();
        int b = sc.nextInt();
        int c = sc.nextInt();
        int d = sc.nextInt();
        System.out.println(a + " " + b + " " + c + " " + d);
        int ret = maxFournumber(a, b, c, d);
        System.out.println(ret);
    }

    // 阶乘和
    public static int facsum(int n) {
        int sum = 0;
        for (int i = 1; i <= n; i++) {
            sum += fac(i);
        }
        return sum;
    }

    //求阶乘
    public static int fac(int n) {
        int ret = 1;
        for (int i = 1; i <= n; i++) {
            ret *= i;
        }
        return ret;
    }

    //1!+2!+3!+4!+5!的和
    public static void main2(String[] args) {
        System.out.println(facsum(5));
    }

    public static void main1(String[] args) {
        System.out.println("hello");
    }

    public static void main(String[] args) {
        int a = 10;
        int b = 20;
        print(a, b);
    }

    public static void print(int x, int y) {
        System.out.println("x = " + x + " y = " + y);
    }
}
