package org.example.servlet;

import org.example.exception.AppException;
import org.example.model.JSONResponse;
import org.example.util.JSONUtil;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.PrintWriter;

public abstract class AbstractBaseServlet extends HttpServlet {

    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        doPost(req, resp);
    }

    @Override
    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        req.setCharacterEncoding("UTF-8");
        resp.setCharacterEncoding("UTF-8");
        resp.setContentType("application/json");

        //创建前后端统一的数据格式对象
        JSONResponse json = new JSONResponse();

        //业务解析请求数据，执行业务操作，获取业务操作返回数据
        try {
            Object data = process(req, resp);
            //业务操作成功，设置success=true及业务数据
            json.setSuccess(true);
            json.setData(data);
        }catch (Exception e){
            e.printStackTrace();
            //业务操作失败，设置success=false，code错误码，message
            //1.处理自定义异常（code，message），2.其他异常（错误消息可能是英文）
            String code = "unknown";
            String message = "未知错误，请联系管理员";
            if(e instanceof AppException){
                code = ((AppException) e).getCode();
                message = e.getMessage();
            }
            json.setCode(code);
            json.setMessage(message);
        }

        //将统一的数据对象，序列化为json字符串，返回给前端
        PrintWriter pw = resp.getWriter();
        pw.println(JSONUtil.serialize(json));
        pw.flush();
        pw.close();
    }

    protected abstract Object process(HttpServletRequest req, HttpServletResponse resp) throws Exception;
}

package org.example.servlet;

import org.example.dao.ArticleDAO;
import org.example.model.Article;
import org.example.model.User;
import org.example.util.JSONUtil;

import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.InputStream;

@WebServlet("/articleAdd")
public class ArticleAddServlet extends AbstractBaseServlet {
    @Override
    protected Object process(HttpServletRequest req, HttpServletResponse resp) throws Exception {
        //通过session获取用户id
        HttpSession session = req.getSession(false);
        User user = (User) session.getAttribute("user");
        //请求数据类型为application/json,需要从输入流获取
        InputStream is = req.getInputStream();
        //请求体数据存在于输入流，json格式需要反序列化
        Article article = JSONUtil.deserialize(is, Article.class);
        article.setUserId(user.getId());
        int num = ArticleDAO.insert(article);
        return null;
    }
}

package org.example.servlet;

import org.example.dao.ArticleDAO;

import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/articleDelete")
public class ArticleDeleteServlet extends AbstractBaseServlet {
    @Override
    protected Object process(HttpServletRequest req, HttpServletResponse resp) throws Exception {
        String ids = req.getParameter("ids");
        int num = ArticleDAO.delete(ids.split(","));
        return null;
    }
}

package org.example.servlet;

import org.example.dao.ArticleDAO;
import org.example.model.Article;

import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet("/articleDetail")
public class ArticleDetailServlet extends AbstractBaseServlet {
    @Override
    protected Object process(HttpServletRequest req, HttpServletResponse resp) throws Exception {
        //获取文章id
        String id = req.getParameter("id");
        //根据文章id查询文章详细信息
        Article article = ArticleDAO.query(Integer.parseInt(id));
        return article;
    }
}

package org.example.servlet;

import org.example.dao.ArticleDAO;
import org.example.exception.AppException;
import org.example.model.Article;
import org.example.model.User;

import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.util.List;

@WebServlet("/articleList")
public class ArticleListServlet extends AbstractBaseServlet {
    @Override
    protected Object process(HttpServletRequest req, HttpServletResponse resp) throws Exception {
        //获取请求数据：用户id（前端写死了的数据）
//        String id = req.getParameter("id");
        HttpSession session = req.getSession(false);
        if(session == null){
            throw new AppException("ART002", "没有登录，不允许访问");
        }
        User user = (User) session.getAttribute("user");
        if(user == null)
            throw new AppException("ART002", "没有登录，不允许访问");

        //根据用户id查询文章列表
        List<Article> articles = ArticleDAO.queryByUserId(user.getId());
        return articles;
    }
}

package org.example.servlet;

import org.example.dao.ArticleDAO;
import org.example.model.Article;
import org.example.util.JSONUtil;

import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.InputStream;

@WebServlet("/articleUpdate")
public class ArticleUpdateServlet extends AbstractBaseServlet {
    @Override
    protected Object process(HttpServletRequest req, HttpServletResponse resp) throws Exception {
        InputStream is = req.getInputStream();
        Article article = JSONUtil.deserialize(is, Article.class);
        int num = ArticleDAO.update(article);
        return null;
    }
}

package org.example.servlet;

import org.example.dao.LoginDAO;
import org.example.exception.AppException;
import org.example.model.User;

import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

@WebServlet("/login")
public class LoginServlet extends AbstractBaseServlet {
    @Override
    protected Object process(HttpServletRequest req, HttpServletResponse resp) throws Exception {
        //解析请求数据
        String username = req.getParameter("username");
        String password = req.getParameter("password");

        //根据账号查询数据库
        User user = LoginDAO.query(username);
        //校验账号及密码
        if(user == null)
            throw new AppException("LOG002", "用户账号不存在");
        if(!user.getPassword().equals(password)){
            throw new AppException("LOG003", "账号或密码错误");
        }
        //校验成功，设置session
        HttpSession session = req.getSession();//获取或创建一个session对象
        session.setAttribute("user", user);
        return null;
    }
}


