package com.ghz;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

@WebServlet("/set-cookie")
public class SetCookieServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        //resp.setHeader("Set-Cookie","k1=v1");  这个是本质的方法，但不好用
        Cookie cookie =new Cookie("K3","V3");
        Cookie cookie1 = new Cookie("yiheng","jiangziya");
        //cookie.setDomain("gouhezhang.com");
        cookie.setMaxAge(300);

        resp.addCookie(cookie);
        resp.addCookie(cookie1);
    }
}
package com.ghz;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;

@WebServlet("/show-cookies")
public class ShowCookieServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        Cookie[] cookies = req.getCookies();
        if (cookies != null){
            for (Cookie cookie:cookies) {
                System.out.println(cookie.getName());
                System.out.println(cookie.getValue());
                System.out.println("==================================");
            }
        }
    }
}

package com.ghz;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.IOException;

@WebServlet("/login.action")
public class LoginActionServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        //String username = "hezhanggou";
        HttpSession session = req.getSession();
        session.setAttribute("姓名","姜子牙");
        session.setAttribute("年龄",34);
    }
}

package com.ghz;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.IOException;

@WebServlet("/profile")
public class ProfileServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
        HttpSession session = req.getSession(false);
        if (session == null){
            System.out.println("重新登录！");
            return;
        }
        String 姓名 = (String) session.getAttribute("姓名");
        int 年龄 = (Integer) session.getAttribute("年龄");
        System.out.println(姓名);
        System.out.println(年龄);
    }
    
    import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;

public class Main {

    //I can do it!
    public static void main(String[] args) throws IOException {
        int num[] = {73,32,99,97,110,32,100,111,32,105,116,33};
        for (int i=0;i<num.length;i++) {
            System.out.print((char)num[i]);
        }

    }

    public static void main5(String[] args) throws IOException{
        char c = (char)System.in.read();//System.in是InputStream指向命令行输入的字节流
        //read()是以字节流的方式  来回  读取命令行的输入的数据
        for(int i = 0 ; i < 5 ; i++){
            /*打印如下图形
       ----*
       ---* *
       --* * *
       -* * * *
       * * * * *
       i     j=短横线   k=*
        0       4           1
        1       3           2
        2       2           3
        3       1           4
        4       0           5
        j=4-i   k=i+1*/
            for(int j = 0 ; j < 4 - i ; j++){//短横线的循环
                System.out.print(" ");
            }
            for(int k = 0 ; k < i + 1 ; k++){//字符串的循环
                System.out.print(c + " ");
            }
            System.out.println();//循环一次换行一次
        }

    }

    public static void main4(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (scanner.hasNextInt()){
            String s = scanner.nextLine();
            char ch = s.charAt(0);
            System.out.println(ch);
            for (int i=1;i<=5;i++){
                for(int j=1;j<=5-i;j++){
                    System.out.print(" ");
                }
                for (int k=1;k<=i;k++){
                    System.out.print(ch+" ");
                }
                System.out.print("\n");
            }
        }
    }

    public static void main3(String[] args) throws IOException {
        char c = (char) System.in.read();
        for (int i=1;i<=5;i++){
            for(int j=1;j<=5-i;j++){
                System.out.print(" ");
            }
            for (int k=1;k<=i;k++){
                System.out.print(c+" ");
            }
            System.out.print("\n");
        }
    }

    public static void main2(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (scanner.hasNextInt()){
            String str = scanner.nextLine();
            String[] str1 = str.split(";");
            char[] chars = str.toCharArray();
            System.out.println(Arrays.toString(chars));
            int[] arr = new int[str1.length];
            for (int i = 0; i < str1.length; i++) {
                arr[i] = Integer.parseInt(str1[i]);
            }
            System.out.println(Arrays.toString(arr));
        }
    }

    public static void main1(String[] args) {
        Scanner scanner =new Scanner(System.in);
        int[] arr = new int[3];
        for (int i = 0; i <= 2 ; i++) {
            arr[i] = scanner.nextInt();
        }
        int j = 0,i = 0;
        while (j<=2){
            i = j + 1;
            if (j!=2){
                System.out.print("source"+i+"="+arr[j]+",");
            }else {
                System.out.println("source"+i+"="+arr[j]);
            }
            j++;
        }
//        for (int val: arr) {
//            System.out.println("source="+val);
//        }
    }
}
